package org.bip.performance;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStream;

import org.bip.api.BIPActor;
import org.bip.api.BIPEngine;
import org.bip.api.BIPGlue;
import org.bip.engine.factory.EngineFactory;
import org.bip.glue.GlueBuilder;
import org.bip.spec.Peer;
import org.bip.spec.Tracker;
import org.junit.After;
import org.junit.Before;
import org.junit.Test;

import akka.actor.ActorSystem;

public class TrackersAndPeers55to100Tests {

	ActorSystem system;
	EngineFactory engineFactory;
	
	@Before
	public void initialize() {

		system = ActorSystem.create("MySystem");
		engineFactory = new EngineFactory(system);

	}
	
	@After
	public void cleanup() {
		system.shutdown();
	}
	
	@Test
	public void TrackerPeer55Test() {

		BIPGlue bipGlue = createGlue("src/test/resources/trackerPeerGlue.xml");
		BIPEngine engine = engineFactory.create("myEngine", bipGlue);

		Tracker tracker1 = new Tracker(1);
		Tracker tracker2 = new Tracker(2);
		Tracker tracker3 = new Tracker(3);
		Tracker tracker4 = new Tracker(4);
		Tracker tracker5 = new Tracker(5);
		Tracker tracker6 = new Tracker(6);
		Tracker tracker7 = new Tracker(7);
		Tracker tracker8 = new Tracker(8);
		Tracker tracker9 = new Tracker(9);
		Tracker tracker10 = new Tracker(10);
		Tracker tracker110 = new Tracker(110);
		Peer peer1 = new Peer(11);
		Peer peer2 = new Peer(12);
		Peer peer3 = new Peer(13);
		Peer peer4 = new Peer(14);
		Peer peer5 = new Peer(15);
		Peer peer6 = new Peer(16);
		Peer peer7 = new Peer(17);
		Peer peer8 = new Peer(18);
		Peer peer9 = new Peer(19);
		Peer peer10 = new Peer(20);
		Peer peer11 = new Peer(21);
		Peer peer12 = new Peer(22);
		Peer peer13 = new Peer(23);
		Peer peer14 = new Peer(24);
		Peer peer15 = new Peer(25);
		Peer peer16 = new Peer(26);
		Peer peer17 = new Peer(27);
		Peer peer18 = new Peer(28);
		Peer peer19 = new Peer(29);
		Peer peer20 = new Peer(30);
		Peer peer21 = new Peer(31);
		Peer peer22 = new Peer(32);
		Peer peer23 = new Peer(33);
		Peer peer24 = new Peer(34);
		Peer peer25 = new Peer(35);
		Peer peer26 = new Peer(36);
		Peer peer27 = new Peer(37);
		Peer peer28 = new Peer(38);
		Peer peer29 = new Peer(39);
		Peer peer30 = new Peer(40);
		Peer peer31 = new Peer(41);
		Peer peer32 = new Peer(42);
		Peer peer33 = new Peer(43);
		Peer peer34 = new Peer(44);
		Peer peer35 = new Peer(45);
		Peer peer36 = new Peer(46);
		Peer peer37 = new Peer(47);
		Peer peer38 = new Peer(48);
		Peer peer39 = new Peer(49);
		Peer peer40 = new Peer(50);
		Peer peer41 = new Peer(51);
		Peer peer42 = new Peer(52);
		Peer peer43 = new Peer(53);
		Peer peer44 = new Peer(54);

		final BIPActor executor1 = engine.register(tracker1, "1", true);
		final BIPActor executor2 = engine.register(tracker2, "2", true);
		final BIPActor executor3 = engine.register(tracker3, "3", true);
		final BIPActor executor4 = engine.register(tracker4, "4", true);
		final BIPActor executor5 = engine.register(tracker5, "5", true);
		final BIPActor executor6 = engine.register(tracker6, "6", true);
		final BIPActor executor7 = engine.register(tracker7, "7", true);
		final BIPActor executor8 = engine.register(tracker8, "8", true);
		final BIPActor executor9 = engine.register(tracker9, "9", true);
		final BIPActor executor10 = engine.register(tracker10, "10", true);
		final BIPActor executor110 = engine.register(tracker110, "110", true);
		final BIPActor executor11 = engine.register(peer1, "11", true);
		final BIPActor executor12 = engine.register(peer2, "12", true);
		final BIPActor executor13 = engine.register(peer3, "13", true);
		final BIPActor executor14 = engine.register(peer4, "14", true);
		final BIPActor executor15 = engine.register(peer5, "15", true);
		final BIPActor executor16 = engine.register(peer6, "16", true);
		final BIPActor executor17 = engine.register(peer7, "17", true);
		final BIPActor executor18 = engine.register(peer8, "18", true);
		final BIPActor executor19 = engine.register(peer9, "19", true);
		final BIPActor executor20 = engine.register(peer10, "20", true);
		final BIPActor executor21 = engine.register(peer11, "21", true);
		final BIPActor executor22 = engine.register(peer12, "22", true);
		final BIPActor executor23 = engine.register(peer13, "23", true);
		final BIPActor executor24 = engine.register(peer14, "24", true);
		final BIPActor executor25 = engine.register(peer15, "25", true);
		final BIPActor executor26 = engine.register(peer16, "26", true);
		final BIPActor executor27 = engine.register(peer17, "27", true);
		final BIPActor executor28 = engine.register(peer18, "28", true);
		final BIPActor executor29 = engine.register(peer19, "29", true);
		final BIPActor executor30 = engine.register(peer20, "30", true);
		final BIPActor executor31 = engine.register(peer21, "31", true);
		final BIPActor executor32 = engine.register(peer22, "32", true);
		final BIPActor executor33 = engine.register(peer23, "33", true);
		final BIPActor executor34 = engine.register(peer24, "34", true);
		final BIPActor executor35 = engine.register(peer25, "35", true);
		final BIPActor executor36 = engine.register(peer26, "36", true);
		final BIPActor executor37 = engine.register(peer27, "37", true);
		final BIPActor executor38 = engine.register(peer28, "38", true);
		final BIPActor executor39 = engine.register(peer29, "39", true);
		final BIPActor executor40 = engine.register(peer30, "40", true);
		final BIPActor executor41 = engine.register(peer31, "41", true);
		final BIPActor executor42 = engine.register(peer32, "42", true);
		final BIPActor executor43 = engine.register(peer33, "43", true);
		final BIPActor executor44 = engine.register(peer34, "44", true);
		final BIPActor executor45 = engine.register(peer35, "45", true);
		final BIPActor executor46 = engine.register(peer36, "46", true);
		final BIPActor executor47 = engine.register(peer37, "47", true);
		final BIPActor executor48 = engine.register(peer38, "48", true);
		final BIPActor executor49 = engine.register(peer39, "49", true);
		final BIPActor executor50 = engine.register(peer40, "50", true);
		final BIPActor executor51 = engine.register(peer41, "51", true);
		final BIPActor executor52 = engine.register(peer42, "52", true);
		final BIPActor executor53 = engine.register(peer43, "53", true);
		final BIPActor executor54 = engine.register(peer44, "54", true);

		engine.specifyGlue(bipGlue);
		engine.start();
		engine.execute();

		try {
			Thread.sleep(120000);
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
	}
	
	@Test
	public void TrackerPeer60Test() {

		BIPGlue bipGlue = createGlue("src/test/resources/trackerPeerGlue.xml");
		BIPEngine engine = engineFactory.create("myEngine", bipGlue);

		Tracker tracker1 = new Tracker(1);
		Tracker tracker2 = new Tracker(2);
		Tracker tracker3 = new Tracker(3);
		Tracker tracker4 = new Tracker(4);
		Tracker tracker5 = new Tracker(5);
		Tracker tracker6 = new Tracker(6);
		Tracker tracker7 = new Tracker(7);
		Tracker tracker8 = new Tracker(8);
		Tracker tracker9 = new Tracker(9);
		Tracker tracker10 = new Tracker(10);
		Tracker tracker110 = new Tracker(110);
		Tracker tracker120 = new Tracker(120);
		Peer peer1 = new Peer(11);
		Peer peer2 = new Peer(12);
		Peer peer3 = new Peer(13);
		Peer peer4 = new Peer(14);
		Peer peer5 = new Peer(15);
		Peer peer6 = new Peer(16);
		Peer peer7 = new Peer(17);
		Peer peer8 = new Peer(18);
		Peer peer9 = new Peer(19);
		Peer peer10 = new Peer(20);
		Peer peer11 = new Peer(21);
		Peer peer12 = new Peer(22);
		Peer peer13 = new Peer(23);
		Peer peer14 = new Peer(24);
		Peer peer15 = new Peer(25);
		Peer peer16 = new Peer(26);
		Peer peer17 = new Peer(27);
		Peer peer18 = new Peer(28);
		Peer peer19 = new Peer(29);
		Peer peer20 = new Peer(30);
		Peer peer21 = new Peer(31);
		Peer peer22 = new Peer(32);
		Peer peer23 = new Peer(33);
		Peer peer24 = new Peer(34);
		Peer peer25 = new Peer(35);
		Peer peer26 = new Peer(36);
		Peer peer27 = new Peer(37);
		Peer peer28 = new Peer(38);
		Peer peer29 = new Peer(39);
		Peer peer30 = new Peer(40);
		Peer peer31 = new Peer(41);
		Peer peer32 = new Peer(42);
		Peer peer33 = new Peer(43);
		Peer peer34 = new Peer(44);
		Peer peer35 = new Peer(45);
		Peer peer36 = new Peer(46);
		Peer peer37 = new Peer(47);
		Peer peer38 = new Peer(48);
		Peer peer39 = new Peer(49);
		Peer peer40 = new Peer(50);
		Peer peer41 = new Peer(51);
		Peer peer42 = new Peer(52);
		Peer peer43 = new Peer(53);
		Peer peer44 = new Peer(54);
		Peer peer45 = new Peer(55);
		Peer peer46 = new Peer(56);
		Peer peer47 = new Peer(57);
		Peer peer48 = new Peer(58);

		final BIPActor executor1 = engine.register(tracker1, "1", true);
		final BIPActor executor2 = engine.register(tracker2, "2", true);
		final BIPActor executor3 = engine.register(tracker3, "3", true);
		final BIPActor executor4 = engine.register(tracker4, "4", true);
		final BIPActor executor5 = engine.register(tracker5, "5", true);
		final BIPActor executor6 = engine.register(tracker6, "6", true);
		final BIPActor executor7 = engine.register(tracker7, "7", true);
		final BIPActor executor8 = engine.register(tracker8, "8", true);
		final BIPActor executor9 = engine.register(tracker9, "9", true);
		final BIPActor executor10 = engine.register(tracker10, "10", true);
		final BIPActor executor110 = engine.register(tracker110, "110", true);
		final BIPActor executor120 = engine.register(tracker120, "120", true);
		final BIPActor executor11 = engine.register(peer1, "11", true);
		final BIPActor executor12 = engine.register(peer2, "12", true);
		final BIPActor executor13 = engine.register(peer3, "13", true);
		final BIPActor executor14 = engine.register(peer4, "14", true);
		final BIPActor executor15 = engine.register(peer5, "15", true);
		final BIPActor executor16 = engine.register(peer6, "16", true);
		final BIPActor executor17 = engine.register(peer7, "17", true);
		final BIPActor executor18 = engine.register(peer8, "18", true);
		final BIPActor executor19 = engine.register(peer9, "19", true);
		final BIPActor executor20 = engine.register(peer10, "20", true);
		final BIPActor executor21 = engine.register(peer11, "21", true);
		final BIPActor executor22 = engine.register(peer12, "22", true);
		final BIPActor executor23 = engine.register(peer13, "23", true);
		final BIPActor executor24 = engine.register(peer14, "24", true);
		final BIPActor executor25 = engine.register(peer15, "25", true);
		final BIPActor executor26 = engine.register(peer16, "26", true);
		final BIPActor executor27 = engine.register(peer17, "27", true);
		final BIPActor executor28 = engine.register(peer18, "28", true);
		final BIPActor executor29 = engine.register(peer19, "29", true);
		final BIPActor executor30 = engine.register(peer20, "30", true);
		final BIPActor executor31 = engine.register(peer21, "31", true);
		final BIPActor executor32 = engine.register(peer22, "32", true);
		final BIPActor executor33 = engine.register(peer23, "33", true);
		final BIPActor executor34 = engine.register(peer24, "34", true);
		final BIPActor executor35 = engine.register(peer25, "35", true);
		final BIPActor executor36 = engine.register(peer26, "36", true);
		final BIPActor executor37 = engine.register(peer27, "37", true);
		final BIPActor executor38 = engine.register(peer28, "38", true);
		final BIPActor executor39 = engine.register(peer29, "39", true);
		final BIPActor executor40 = engine.register(peer30, "40", true);
		final BIPActor executor41 = engine.register(peer31, "41", true);
		final BIPActor executor42 = engine.register(peer32, "42", true);
		final BIPActor executor43 = engine.register(peer33, "43", true);
		final BIPActor executor44 = engine.register(peer34, "44", true);
		final BIPActor executor45 = engine.register(peer35, "45", true);
		final BIPActor executor46 = engine.register(peer36, "46", true);
		final BIPActor executor47 = engine.register(peer37, "47", true);
		final BIPActor executor48 = engine.register(peer38, "48", true);
		final BIPActor executor49 = engine.register(peer39, "49", true);
		final BIPActor executor50 = engine.register(peer40, "50", true);
		final BIPActor executor51 = engine.register(peer41, "51", true);
		final BIPActor executor52 = engine.register(peer42, "52", true);
		final BIPActor executor53 = engine.register(peer43, "53", true);
		final BIPActor executor54 = engine.register(peer44, "54", true);
		final BIPActor executor55 = engine.register(peer45, "55", true);
		final BIPActor executor56 = engine.register(peer46, "56", true);
		final BIPActor executor57 = engine.register(peer47, "57", true);
		final BIPActor executor58 = engine.register(peer48, "58", true);

		engine.specifyGlue(bipGlue);
		engine.start();
		engine.execute();

		try {
			Thread.sleep(150000);
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
	}

	@Test
	public void TrackerPeer65Test() {

		BIPGlue bipGlue = createGlue("src/test/resources/trackerPeerGlue.xml");
		BIPEngine engine = engineFactory.create("myEngine", bipGlue);

		Tracker tracker1 = new Tracker(1);
		Tracker tracker2 = new Tracker(2);
		Tracker tracker3 = new Tracker(3);
		Tracker tracker4 = new Tracker(4);
		Tracker tracker5 = new Tracker(5);
		Tracker tracker6 = new Tracker(6);
		Tracker tracker7 = new Tracker(7);
		Tracker tracker8 = new Tracker(8);
		Tracker tracker9 = new Tracker(9);
		Tracker tracker10 = new Tracker(10);
		Tracker tracker110 = new Tracker(110);
		Tracker tracker120 = new Tracker(120);
		Tracker tracker130 = new Tracker(130);
		Peer peer1 = new Peer(11);
		Peer peer2 = new Peer(12);
		Peer peer3 = new Peer(13);
		Peer peer4 = new Peer(14);
		Peer peer5 = new Peer(15);
		Peer peer6 = new Peer(16);
		Peer peer7 = new Peer(17);
		Peer peer8 = new Peer(18);
		Peer peer9 = new Peer(19);
		Peer peer10 = new Peer(20);
		Peer peer11 = new Peer(21);
		Peer peer12 = new Peer(22);
		Peer peer13 = new Peer(23);
		Peer peer14 = new Peer(24);
		Peer peer15 = new Peer(25);
		Peer peer16 = new Peer(26);
		Peer peer17 = new Peer(27);
		Peer peer18 = new Peer(28);
		Peer peer19 = new Peer(29);
		Peer peer20 = new Peer(30);
		Peer peer21 = new Peer(31);
		Peer peer22 = new Peer(32);
		Peer peer23 = new Peer(33);
		Peer peer24 = new Peer(34);
		Peer peer25 = new Peer(35);
		Peer peer26 = new Peer(36);
		Peer peer27 = new Peer(37);
		Peer peer28 = new Peer(38);
		Peer peer29 = new Peer(39);
		Peer peer30 = new Peer(40);
		Peer peer31 = new Peer(41);
		Peer peer32 = new Peer(42);
		Peer peer33 = new Peer(43);
		Peer peer34 = new Peer(44);
		Peer peer35 = new Peer(45);
		Peer peer36 = new Peer(46);
		Peer peer37 = new Peer(47);
		Peer peer38 = new Peer(48);
		Peer peer39 = new Peer(49);
		Peer peer40 = new Peer(50);
		Peer peer41 = new Peer(51);
		Peer peer42 = new Peer(52);
		Peer peer43 = new Peer(53);
		Peer peer44 = new Peer(54);
		Peer peer45 = new Peer(55);
		Peer peer46 = new Peer(56);
		Peer peer47 = new Peer(57);
		Peer peer48 = new Peer(58);
		Peer peer49 = new Peer(59);
		Peer peer50 = new Peer(60);
		Peer peer51 = new Peer(61);
		Peer peer52 = new Peer(62);

		final BIPActor executor1 = engine.register(tracker1, "1", true);
		final BIPActor executor2 = engine.register(tracker2, "2", true);
		final BIPActor executor3 = engine.register(tracker3, "3", true);
		final BIPActor executor4 = engine.register(tracker4, "4", true);
		final BIPActor executor5 = engine.register(tracker5, "5", true);
		final BIPActor executor6 = engine.register(tracker6, "6", true);
		final BIPActor executor7 = engine.register(tracker7, "7", true);
		final BIPActor executor8 = engine.register(tracker8, "8", true);
		final BIPActor executor9 = engine.register(tracker9, "9", true);
		final BIPActor executor10 = engine.register(tracker10, "10", true);
		final BIPActor executor110 = engine.register(tracker110, "110", true);
		final BIPActor executor120 = engine.register(tracker120, "120", true);
		final BIPActor executor130 = engine.register(tracker130, "130", true);
		final BIPActor executor11 = engine.register(peer1, "11", true);
		final BIPActor executor12 = engine.register(peer2, "12", true);
		final BIPActor executor13 = engine.register(peer3, "13", true);
		final BIPActor executor14 = engine.register(peer4, "14", true);
		final BIPActor executor15 = engine.register(peer5, "15", true);
		final BIPActor executor16 = engine.register(peer6, "16", true);
		final BIPActor executor17 = engine.register(peer7, "17", true);
		final BIPActor executor18 = engine.register(peer8, "18", true);
		final BIPActor executor19 = engine.register(peer9, "19", true);
		final BIPActor executor20 = engine.register(peer10, "20", true);
		final BIPActor executor21 = engine.register(peer11, "21", true);
		final BIPActor executor22 = engine.register(peer12, "22", true);
		final BIPActor executor23 = engine.register(peer13, "23", true);
		final BIPActor executor24 = engine.register(peer14, "24", true);
		final BIPActor executor25 = engine.register(peer15, "25", true);
		final BIPActor executor26 = engine.register(peer16, "26", true);
		final BIPActor executor27 = engine.register(peer17, "27", true);
		final BIPActor executor28 = engine.register(peer18, "28", true);
		final BIPActor executor29 = engine.register(peer19, "29", true);
		final BIPActor executor30 = engine.register(peer20, "30", true);
		final BIPActor executor31 = engine.register(peer21, "31", true);
		final BIPActor executor32 = engine.register(peer22, "32", true);
		final BIPActor executor33 = engine.register(peer23, "33", true);
		final BIPActor executor34 = engine.register(peer24, "34", true);
		final BIPActor executor35 = engine.register(peer25, "35", true);
		final BIPActor executor36 = engine.register(peer26, "36", true);
		final BIPActor executor37 = engine.register(peer27, "37", true);
		final BIPActor executor38 = engine.register(peer28, "38", true);
		final BIPActor executor39 = engine.register(peer29, "39", true);
		final BIPActor executor40 = engine.register(peer30, "40", true);
		final BIPActor executor41 = engine.register(peer31, "41", true);
		final BIPActor executor42 = engine.register(peer32, "42", true);
		final BIPActor executor43 = engine.register(peer33, "43", true);
		final BIPActor executor44 = engine.register(peer34, "44", true);
		final BIPActor executor45 = engine.register(peer35, "45", true);
		final BIPActor executor46 = engine.register(peer36, "46", true);
		final BIPActor executor47 = engine.register(peer37, "47", true);
		final BIPActor executor48 = engine.register(peer38, "48", true);
		final BIPActor executor49 = engine.register(peer39, "49", true);
		final BIPActor executor50 = engine.register(peer40, "50", true);
		final BIPActor executor51 = engine.register(peer41, "51", true);
		final BIPActor executor52 = engine.register(peer42, "52", true);
		final BIPActor executor53 = engine.register(peer43, "53", true);
		final BIPActor executor54 = engine.register(peer44, "54", true);
		final BIPActor executor55 = engine.register(peer45, "55", true);
		final BIPActor executor56 = engine.register(peer46, "56", true);
		final BIPActor executor57 = engine.register(peer47, "57", true);
		final BIPActor executor58 = engine.register(peer48, "58", true);
		final BIPActor executor59 = engine.register(peer49, "59", true);
		final BIPActor executor60 = engine.register(peer50, "60", true);
		final BIPActor executor61 = engine.register(peer51, "61", true);
		final BIPActor executor62 = engine.register(peer52, "62", true);

		engine.specifyGlue(bipGlue);
		engine.start();
		engine.execute();

		try {
			Thread.sleep(250000);
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
	}
	
	@Test
	public void TrackerPeer70Test() {

		BIPGlue bipGlue = createGlue("src/test/resources/trackerPeerGlue.xml");
		BIPEngine engine = engineFactory.create("myEngine", bipGlue);

		Tracker tracker1 = new Tracker(1);
		Tracker tracker2 = new Tracker(2);
		Tracker tracker3 = new Tracker(3);
		Tracker tracker4 = new Tracker(4);
		Tracker tracker5 = new Tracker(5);
		Tracker tracker6 = new Tracker(6);
		Tracker tracker7 = new Tracker(7);
		Tracker tracker8 = new Tracker(8);
		Tracker tracker9 = new Tracker(9);
		Tracker tracker10 = new Tracker(10);
		Tracker tracker110 = new Tracker(110);
		Tracker tracker120 = new Tracker(120);
		Tracker tracker130 = new Tracker(130);
		Tracker tracker140 = new Tracker(140);
		Peer peer1 = new Peer(11);
		Peer peer2 = new Peer(12);
		Peer peer3 = new Peer(13);
		Peer peer4 = new Peer(14);
		Peer peer5 = new Peer(15);
		Peer peer6 = new Peer(16);
		Peer peer7 = new Peer(17);
		Peer peer8 = new Peer(18);
		Peer peer9 = new Peer(19);
		Peer peer10 = new Peer(20);
		Peer peer11 = new Peer(21);
		Peer peer12 = new Peer(22);
		Peer peer13 = new Peer(23);
		Peer peer14 = new Peer(24);
		Peer peer15 = new Peer(25);
		Peer peer16 = new Peer(26);
		Peer peer17 = new Peer(27);
		Peer peer18 = new Peer(28);
		Peer peer19 = new Peer(29);
		Peer peer20 = new Peer(30);
		Peer peer21 = new Peer(31);
		Peer peer22 = new Peer(32);
		Peer peer23 = new Peer(33);
		Peer peer24 = new Peer(34);
		Peer peer25 = new Peer(35);
		Peer peer26 = new Peer(36);
		Peer peer27 = new Peer(37);
		Peer peer28 = new Peer(38);
		Peer peer29 = new Peer(39);
		Peer peer30 = new Peer(40);
		Peer peer31 = new Peer(41);
		Peer peer32 = new Peer(42);
		Peer peer33 = new Peer(43);
		Peer peer34 = new Peer(44);
		Peer peer35 = new Peer(45);
		Peer peer36 = new Peer(46);
		Peer peer37 = new Peer(47);
		Peer peer38 = new Peer(48);
		Peer peer39 = new Peer(49);
		Peer peer40 = new Peer(50);
		Peer peer41 = new Peer(51);
		Peer peer42 = new Peer(52);
		Peer peer43 = new Peer(53);
		Peer peer44 = new Peer(54);
		Peer peer45 = new Peer(55);
		Peer peer46 = new Peer(56);
		Peer peer47 = new Peer(57);
		Peer peer48 = new Peer(58);
		Peer peer49 = new Peer(59);
		Peer peer50 = new Peer(60);
		Peer peer51 = new Peer(61);
		Peer peer52 = new Peer(62);
		Peer peer53 = new Peer(63);
		Peer peer54 = new Peer(64);
		Peer peer55 = new Peer(65);
		Peer peer56 = new Peer(66);

		final BIPActor executor1 = engine.register(tracker1, "1", true);
		final BIPActor executor2 = engine.register(tracker2, "2", true);
		final BIPActor executor3 = engine.register(tracker3, "3", true);
		final BIPActor executor4 = engine.register(tracker4, "4", true);
		final BIPActor executor5 = engine.register(tracker5, "5", true);
		final BIPActor executor6 = engine.register(tracker6, "6", true);
		final BIPActor executor7 = engine.register(tracker7, "7", true);
		final BIPActor executor8 = engine.register(tracker8, "8", true);
		final BIPActor executor9 = engine.register(tracker9, "9", true);
		final BIPActor executor10 = engine.register(tracker10, "10", true);
		final BIPActor executor110 = engine.register(tracker110, "110", true);
		final BIPActor executor120 = engine.register(tracker120, "120", true);
		final BIPActor executor130 = engine.register(tracker130, "130", true);
		final BIPActor executor140 = engine.register(tracker140, "140", true);
		final BIPActor executor11 = engine.register(peer1, "11", true);
		final BIPActor executor12 = engine.register(peer2, "12", true);
		final BIPActor executor13 = engine.register(peer3, "13", true);
		final BIPActor executor14 = engine.register(peer4, "14", true);
		final BIPActor executor15 = engine.register(peer5, "15", true);
		final BIPActor executor16 = engine.register(peer6, "16", true);
		final BIPActor executor17 = engine.register(peer7, "17", true);
		final BIPActor executor18 = engine.register(peer8, "18", true);
		final BIPActor executor19 = engine.register(peer9, "19", true);
		final BIPActor executor20 = engine.register(peer10, "20", true);
		final BIPActor executor21 = engine.register(peer11, "21", true);
		final BIPActor executor22 = engine.register(peer12, "22", true);
		final BIPActor executor23 = engine.register(peer13, "23", true);
		final BIPActor executor24 = engine.register(peer14, "24", true);
		final BIPActor executor25 = engine.register(peer15, "25", true);
		final BIPActor executor26 = engine.register(peer16, "26", true);
		final BIPActor executor27 = engine.register(peer17, "27", true);
		final BIPActor executor28 = engine.register(peer18, "28", true);
		final BIPActor executor29 = engine.register(peer19, "29", true);
		final BIPActor executor30 = engine.register(peer20, "30", true);
		final BIPActor executor31 = engine.register(peer21, "31", true);
		final BIPActor executor32 = engine.register(peer22, "32", true);
		final BIPActor executor33 = engine.register(peer23, "33", true);
		final BIPActor executor34 = engine.register(peer24, "34", true);
		final BIPActor executor35 = engine.register(peer25, "35", true);
		final BIPActor executor36 = engine.register(peer26, "36", true);
		final BIPActor executor37 = engine.register(peer27, "37", true);
		final BIPActor executor38 = engine.register(peer28, "38", true);
		final BIPActor executor39 = engine.register(peer29, "39", true);
		final BIPActor executor40 = engine.register(peer30, "40", true);
		final BIPActor executor41 = engine.register(peer31, "41", true);
		final BIPActor executor42 = engine.register(peer32, "42", true);
		final BIPActor executor43 = engine.register(peer33, "43", true);
		final BIPActor executor44 = engine.register(peer34, "44", true);
		final BIPActor executor45 = engine.register(peer35, "45", true);
		final BIPActor executor46 = engine.register(peer36, "46", true);
		final BIPActor executor47 = engine.register(peer37, "47", true);
		final BIPActor executor48 = engine.register(peer38, "48", true);
		final BIPActor executor49 = engine.register(peer39, "49", true);
		final BIPActor executor50 = engine.register(peer40, "50", true);
		final BIPActor executor51 = engine.register(peer41, "51", true);
		final BIPActor executor52 = engine.register(peer42, "52", true);
		final BIPActor executor53 = engine.register(peer43, "53", true);
		final BIPActor executor54 = engine.register(peer44, "54", true);
		final BIPActor executor55 = engine.register(peer45, "55", true);
		final BIPActor executor56 = engine.register(peer46, "56", true);
		final BIPActor executor57 = engine.register(peer47, "57", true);
		final BIPActor executor58 = engine.register(peer48, "58", true);
		final BIPActor executor59 = engine.register(peer49, "59", true);
		final BIPActor executor60 = engine.register(peer50, "60", true);
		final BIPActor executor61 = engine.register(peer51, "61", true);
		final BIPActor executor62 = engine.register(peer52, "62", true);
		final BIPActor executor63 = engine.register(peer53, "63", true);
		final BIPActor executor64 = engine.register(peer54, "64", true);
		final BIPActor executor65 = engine.register(peer55, "65", true);
		final BIPActor executor66 = engine.register(peer56, "66", true);

		engine.specifyGlue(bipGlue);
		engine.start();
		engine.execute();

		try {
			Thread.sleep(350000);
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
	}
	
	@Test
	public void TrackerPeer75Test() {

		BIPGlue bipGlue = createGlue("src/test/resources/trackerPeerGlue.xml");
		BIPEngine engine = engineFactory.create("myEngine", bipGlue);

		Tracker tracker1 = new Tracker(1);
		Tracker tracker2 = new Tracker(2);
		Tracker tracker3 = new Tracker(3);
		Tracker tracker4 = new Tracker(4);
		Tracker tracker5 = new Tracker(5);
		Tracker tracker6 = new Tracker(6);
		Tracker tracker7 = new Tracker(7);
		Tracker tracker8 = new Tracker(8);
		Tracker tracker9 = new Tracker(9);
		Tracker tracker10 = new Tracker(10);
		Tracker tracker110 = new Tracker(110);
		Tracker tracker120 = new Tracker(120);
		Tracker tracker130 = new Tracker(130);
		Tracker tracker140 = new Tracker(140);
		Tracker tracker150 = new Tracker(150);
		Peer peer1 = new Peer(11);
		Peer peer2 = new Peer(12);
		Peer peer3 = new Peer(13);
		Peer peer4 = new Peer(14);
		Peer peer5 = new Peer(15);
		Peer peer6 = new Peer(16);
		Peer peer7 = new Peer(17);
		Peer peer8 = new Peer(18);
		Peer peer9 = new Peer(19);
		Peer peer10 = new Peer(20);
		Peer peer11 = new Peer(21);
		Peer peer12 = new Peer(22);
		Peer peer13 = new Peer(23);
		Peer peer14 = new Peer(24);
		Peer peer15 = new Peer(25);
		Peer peer16 = new Peer(26);
		Peer peer17 = new Peer(27);
		Peer peer18 = new Peer(28);
		Peer peer19 = new Peer(29);
		Peer peer20 = new Peer(30);
		Peer peer21 = new Peer(31);
		Peer peer22 = new Peer(32);
		Peer peer23 = new Peer(33);
		Peer peer24 = new Peer(34);
		Peer peer25 = new Peer(35);
		Peer peer26 = new Peer(36);
		Peer peer27 = new Peer(37);
		Peer peer28 = new Peer(38);
		Peer peer29 = new Peer(39);
		Peer peer30 = new Peer(40);
		Peer peer31 = new Peer(41);
		Peer peer32 = new Peer(42);
		Peer peer33 = new Peer(43);
		Peer peer34 = new Peer(44);
		Peer peer35 = new Peer(45);
		Peer peer36 = new Peer(46);
		Peer peer37 = new Peer(47);
		Peer peer38 = new Peer(48);
		Peer peer39 = new Peer(49);
		Peer peer40 = new Peer(50);
		Peer peer41 = new Peer(51);
		Peer peer42 = new Peer(52);
		Peer peer43 = new Peer(53);
		Peer peer44 = new Peer(54);
		Peer peer45 = new Peer(55);
		Peer peer46 = new Peer(56);
		Peer peer47 = new Peer(57);
		Peer peer48 = new Peer(58);
		Peer peer49 = new Peer(59);
		Peer peer50 = new Peer(60);
		Peer peer51 = new Peer(61);
		Peer peer52 = new Peer(62);
		Peer peer53 = new Peer(63);
		Peer peer54 = new Peer(64);
		Peer peer55 = new Peer(65);
		Peer peer56 = new Peer(66);		
		Peer peer57 = new Peer(67);
		Peer peer58 = new Peer(68);
		Peer peer59 = new Peer(69);
		Peer peer60 = new Peer(70);

		final BIPActor executor1 = engine.register(tracker1, "1", true);
		final BIPActor executor2 = engine.register(tracker2, "2", true);
		final BIPActor executor3 = engine.register(tracker3, "3", true);
		final BIPActor executor4 = engine.register(tracker4, "4", true);
		final BIPActor executor5 = engine.register(tracker5, "5", true);
		final BIPActor executor6 = engine.register(tracker6, "6", true);
		final BIPActor executor7 = engine.register(tracker7, "7", true);
		final BIPActor executor8 = engine.register(tracker8, "8", true);
		final BIPActor executor9 = engine.register(tracker9, "9", true);
		final BIPActor executor10 = engine.register(tracker10, "10", true);
		final BIPActor executor110 = engine.register(tracker110, "110", true);
		final BIPActor executor120 = engine.register(tracker120, "120", true);
		final BIPActor executor130 = engine.register(tracker130, "130", true);
		final BIPActor executor140 = engine.register(tracker140, "140", true);
		final BIPActor executor150 = engine.register(tracker150, "150", true);
		final BIPActor executor11 = engine.register(peer1, "11", true);
		final BIPActor executor12 = engine.register(peer2, "12", true);
		final BIPActor executor13 = engine.register(peer3, "13", true);
		final BIPActor executor14 = engine.register(peer4, "14", true);
		final BIPActor executor15 = engine.register(peer5, "15", true);
		final BIPActor executor16 = engine.register(peer6, "16", true);
		final BIPActor executor17 = engine.register(peer7, "17", true);
		final BIPActor executor18 = engine.register(peer8, "18", true);
		final BIPActor executor19 = engine.register(peer9, "19", true);
		final BIPActor executor20 = engine.register(peer10, "20", true);
		final BIPActor executor21 = engine.register(peer11, "21", true);
		final BIPActor executor22 = engine.register(peer12, "22", true);
		final BIPActor executor23 = engine.register(peer13, "23", true);
		final BIPActor executor24 = engine.register(peer14, "24", true);
		final BIPActor executor25 = engine.register(peer15, "25", true);
		final BIPActor executor26 = engine.register(peer16, "26", true);
		final BIPActor executor27 = engine.register(peer17, "27", true);
		final BIPActor executor28 = engine.register(peer18, "28", true);
		final BIPActor executor29 = engine.register(peer19, "29", true);
		final BIPActor executor30 = engine.register(peer20, "30", true);
		final BIPActor executor31 = engine.register(peer21, "31", true);
		final BIPActor executor32 = engine.register(peer22, "32", true);
		final BIPActor executor33 = engine.register(peer23, "33", true);
		final BIPActor executor34 = engine.register(peer24, "34", true);
		final BIPActor executor35 = engine.register(peer25, "35", true);
		final BIPActor executor36 = engine.register(peer26, "36", true);
		final BIPActor executor37 = engine.register(peer27, "37", true);
		final BIPActor executor38 = engine.register(peer28, "38", true);
		final BIPActor executor39 = engine.register(peer29, "39", true);
		final BIPActor executor40 = engine.register(peer30, "40", true);
		final BIPActor executor41 = engine.register(peer31, "41", true);
		final BIPActor executor42 = engine.register(peer32, "42", true);
		final BIPActor executor43 = engine.register(peer33, "43", true);
		final BIPActor executor44 = engine.register(peer34, "44", true);
		final BIPActor executor45 = engine.register(peer35, "45", true);
		final BIPActor executor46 = engine.register(peer36, "46", true);
		final BIPActor executor47 = engine.register(peer37, "47", true);
		final BIPActor executor48 = engine.register(peer38, "48", true);
		final BIPActor executor49 = engine.register(peer39, "49", true);
		final BIPActor executor50 = engine.register(peer40, "50", true);
		final BIPActor executor51 = engine.register(peer41, "51", true);
		final BIPActor executor52 = engine.register(peer42, "52", true);
		final BIPActor executor53 = engine.register(peer43, "53", true);
		final BIPActor executor54 = engine.register(peer44, "54", true);
		final BIPActor executor55 = engine.register(peer45, "55", true);
		final BIPActor executor56 = engine.register(peer46, "56", true);
		final BIPActor executor57 = engine.register(peer47, "57", true);
		final BIPActor executor58 = engine.register(peer48, "58", true);
		final BIPActor executor59 = engine.register(peer49, "59", true);
		final BIPActor executor60 = engine.register(peer50, "60", true);
		final BIPActor executor61 = engine.register(peer51, "61", true);
		final BIPActor executor62 = engine.register(peer52, "62", true);
		final BIPActor executor63 = engine.register(peer53, "63", true);
		final BIPActor executor64 = engine.register(peer54, "64", true);
		final BIPActor executor65 = engine.register(peer55, "65", true);
		final BIPActor executor66 = engine.register(peer56, "66", true);
		final BIPActor executor67 = engine.register(peer57, "67", true);
		final BIPActor executor68 = engine.register(peer58, "68", true);
		final BIPActor executor69 = engine.register(peer59, "69", true);
		final BIPActor executor70 = engine.register(peer60, "70", true);
		
		engine.specifyGlue(bipGlue);
		engine.start();
		engine.execute();

		try {
			Thread.sleep(400000);
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
	}
	
	@Test
	public void TrackerPeer80Test() {

		BIPGlue bipGlue = createGlue("src/test/resources/trackerPeerGlue.xml");
		BIPEngine engine = engineFactory.create("myEngine", bipGlue);

		Tracker tracker1 = new Tracker(1);
		Tracker tracker2 = new Tracker(2);
		Tracker tracker3 = new Tracker(3);
		Tracker tracker4 = new Tracker(4);
		Tracker tracker5 = new Tracker(5);
		Tracker tracker6 = new Tracker(6);
		Tracker tracker7 = new Tracker(7);
		Tracker tracker8 = new Tracker(8);
		Tracker tracker9 = new Tracker(9);
		Tracker tracker10 = new Tracker(10);
		Tracker tracker110 = new Tracker(110);
		Tracker tracker120 = new Tracker(120);
		Tracker tracker130 = new Tracker(130);
		Tracker tracker140 = new Tracker(140);
		Tracker tracker150 = new Tracker(150);
		Tracker tracker160 = new Tracker(160);
		Peer peer1 = new Peer(11);
		Peer peer2 = new Peer(12);
		Peer peer3 = new Peer(13);
		Peer peer4 = new Peer(14);
		Peer peer5 = new Peer(15);
		Peer peer6 = new Peer(16);
		Peer peer7 = new Peer(17);
		Peer peer8 = new Peer(18);
		Peer peer9 = new Peer(19);
		Peer peer10 = new Peer(20);
		Peer peer11 = new Peer(21);
		Peer peer12 = new Peer(22);
		Peer peer13 = new Peer(23);
		Peer peer14 = new Peer(24);
		Peer peer15 = new Peer(25);
		Peer peer16 = new Peer(26);
		Peer peer17 = new Peer(27);
		Peer peer18 = new Peer(28);
		Peer peer19 = new Peer(29);
		Peer peer20 = new Peer(30);
		Peer peer21 = new Peer(31);
		Peer peer22 = new Peer(32);
		Peer peer23 = new Peer(33);
		Peer peer24 = new Peer(34);
		Peer peer25 = new Peer(35);
		Peer peer26 = new Peer(36);
		Peer peer27 = new Peer(37);
		Peer peer28 = new Peer(38);
		Peer peer29 = new Peer(39);
		Peer peer30 = new Peer(40);
		Peer peer31 = new Peer(41);
		Peer peer32 = new Peer(42);
		Peer peer33 = new Peer(43);
		Peer peer34 = new Peer(44);
		Peer peer35 = new Peer(45);
		Peer peer36 = new Peer(46);
		Peer peer37 = new Peer(47);
		Peer peer38 = new Peer(48);
		Peer peer39 = new Peer(49);
		Peer peer40 = new Peer(50);
		Peer peer41 = new Peer(51);
		Peer peer42 = new Peer(52);
		Peer peer43 = new Peer(53);
		Peer peer44 = new Peer(54);
		Peer peer45 = new Peer(55);
		Peer peer46 = new Peer(56);
		Peer peer47 = new Peer(57);
		Peer peer48 = new Peer(58);
		Peer peer49 = new Peer(59);
		Peer peer50 = new Peer(60);
		Peer peer51 = new Peer(61);
		Peer peer52 = new Peer(62);
		Peer peer53 = new Peer(63);
		Peer peer54 = new Peer(64);
		Peer peer55 = new Peer(65);
		Peer peer56 = new Peer(66);		
		Peer peer57 = new Peer(67);
		Peer peer58 = new Peer(68);
		Peer peer59 = new Peer(69);
		Peer peer60 = new Peer(70);
		Peer peer61 = new Peer(71);
		Peer peer62 = new Peer(72);
		Peer peer63 = new Peer(73);
		Peer peer64 = new Peer(74);

		final BIPActor executor1 = engine.register(tracker1, "1", true);
		final BIPActor executor2 = engine.register(tracker2, "2", true);
		final BIPActor executor3 = engine.register(tracker3, "3", true);
		final BIPActor executor4 = engine.register(tracker4, "4", true);
		final BIPActor executor5 = engine.register(tracker5, "5", true);
		final BIPActor executor6 = engine.register(tracker6, "6", true);
		final BIPActor executor7 = engine.register(tracker7, "7", true);
		final BIPActor executor8 = engine.register(tracker8, "8", true);
		final BIPActor executor9 = engine.register(tracker9, "9", true);
		final BIPActor executor10 = engine.register(tracker10, "10", true);
		final BIPActor executor110 = engine.register(tracker110, "110", true);
		final BIPActor executor120 = engine.register(tracker120, "120", true);
		final BIPActor executor130 = engine.register(tracker130, "130", true);
		final BIPActor executor140 = engine.register(tracker140, "140", true);
		final BIPActor executor150 = engine.register(tracker150, "150", true);
		final BIPActor executor160 = engine.register(tracker160, "160", true);
		final BIPActor executor11 = engine.register(peer1, "11", true);
		final BIPActor executor12 = engine.register(peer2, "12", true);
		final BIPActor executor13 = engine.register(peer3, "13", true);
		final BIPActor executor14 = engine.register(peer4, "14", true);
		final BIPActor executor15 = engine.register(peer5, "15", true);
		final BIPActor executor16 = engine.register(peer6, "16", true);
		final BIPActor executor17 = engine.register(peer7, "17", true);
		final BIPActor executor18 = engine.register(peer8, "18", true);
		final BIPActor executor19 = engine.register(peer9, "19", true);
		final BIPActor executor20 = engine.register(peer10, "20", true);
		final BIPActor executor21 = engine.register(peer11, "21", true);
		final BIPActor executor22 = engine.register(peer12, "22", true);
		final BIPActor executor23 = engine.register(peer13, "23", true);
		final BIPActor executor24 = engine.register(peer14, "24", true);
		final BIPActor executor25 = engine.register(peer15, "25", true);
		final BIPActor executor26 = engine.register(peer16, "26", true);
		final BIPActor executor27 = engine.register(peer17, "27", true);
		final BIPActor executor28 = engine.register(peer18, "28", true);
		final BIPActor executor29 = engine.register(peer19, "29", true);
		final BIPActor executor30 = engine.register(peer20, "30", true);
		final BIPActor executor31 = engine.register(peer21, "31", true);
		final BIPActor executor32 = engine.register(peer22, "32", true);
		final BIPActor executor33 = engine.register(peer23, "33", true);
		final BIPActor executor34 = engine.register(peer24, "34", true);
		final BIPActor executor35 = engine.register(peer25, "35", true);
		final BIPActor executor36 = engine.register(peer26, "36", true);
		final BIPActor executor37 = engine.register(peer27, "37", true);
		final BIPActor executor38 = engine.register(peer28, "38", true);
		final BIPActor executor39 = engine.register(peer29, "39", true);
		final BIPActor executor40 = engine.register(peer30, "40", true);
		final BIPActor executor41 = engine.register(peer31, "41", true);
		final BIPActor executor42 = engine.register(peer32, "42", true);
		final BIPActor executor43 = engine.register(peer33, "43", true);
		final BIPActor executor44 = engine.register(peer34, "44", true);
		final BIPActor executor45 = engine.register(peer35, "45", true);
		final BIPActor executor46 = engine.register(peer36, "46", true);
		final BIPActor executor47 = engine.register(peer37, "47", true);
		final BIPActor executor48 = engine.register(peer38, "48", true);
		final BIPActor executor49 = engine.register(peer39, "49", true);
		final BIPActor executor50 = engine.register(peer40, "50", true);
		final BIPActor executor51 = engine.register(peer41, "51", true);
		final BIPActor executor52 = engine.register(peer42, "52", true);
		final BIPActor executor53 = engine.register(peer43, "53", true);
		final BIPActor executor54 = engine.register(peer44, "54", true);
		final BIPActor executor55 = engine.register(peer45, "55", true);
		final BIPActor executor56 = engine.register(peer46, "56", true);
		final BIPActor executor57 = engine.register(peer47, "57", true);
		final BIPActor executor58 = engine.register(peer48, "58", true);
		final BIPActor executor59 = engine.register(peer49, "59", true);
		final BIPActor executor60 = engine.register(peer50, "60", true);
		final BIPActor executor61 = engine.register(peer51, "61", true);
		final BIPActor executor62 = engine.register(peer52, "62", true);
		final BIPActor executor63 = engine.register(peer53, "63", true);
		final BIPActor executor64 = engine.register(peer54, "64", true);
		final BIPActor executor65 = engine.register(peer55, "65", true);
		final BIPActor executor66 = engine.register(peer56, "66", true);
		final BIPActor executor67 = engine.register(peer57, "67", true);
		final BIPActor executor68 = engine.register(peer58, "68", true);
		final BIPActor executor69 = engine.register(peer59, "69", true);
		final BIPActor executor70 = engine.register(peer60, "70", true);
		final BIPActor executor71 = engine.register(peer61, "71", true);
		final BIPActor executor72 = engine.register(peer62, "72", true);
		final BIPActor executor73 = engine.register(peer63, "73", true);
		final BIPActor executor74 = engine.register(peer64, "74", true);
		
		engine.specifyGlue(bipGlue);
		engine.start();
		engine.execute();

		try {
			Thread.sleep(550000);
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
	}
	
	@Test
	public void TrackerPeer85Test() {

		BIPGlue bipGlue = createGlue("src/test/resources/trackerPeerGlue.xml");
		BIPEngine engine = engineFactory.create("myEngine", bipGlue);

		Tracker tracker1 = new Tracker(1);
		Tracker tracker2 = new Tracker(2);
		Tracker tracker3 = new Tracker(3);
		Tracker tracker4 = new Tracker(4);
		Tracker tracker5 = new Tracker(5);
		Tracker tracker6 = new Tracker(6);
		Tracker tracker7 = new Tracker(7);
		Tracker tracker8 = new Tracker(8);
		Tracker tracker9 = new Tracker(9);
		Tracker tracker10 = new Tracker(10);
		Tracker tracker110 = new Tracker(110);
		Tracker tracker120 = new Tracker(120);
		Tracker tracker130 = new Tracker(130);
		Tracker tracker140 = new Tracker(140);
		Tracker tracker150 = new Tracker(150);
		Tracker tracker160 = new Tracker(160);
		Tracker tracker170 = new Tracker(170);
		Peer peer1 = new Peer(11);
		Peer peer2 = new Peer(12);
		Peer peer3 = new Peer(13);
		Peer peer4 = new Peer(14);
		Peer peer5 = new Peer(15);
		Peer peer6 = new Peer(16);
		Peer peer7 = new Peer(17);
		Peer peer8 = new Peer(18);
		Peer peer9 = new Peer(19);
		Peer peer10 = new Peer(20);
		Peer peer11 = new Peer(21);
		Peer peer12 = new Peer(22);
		Peer peer13 = new Peer(23);
		Peer peer14 = new Peer(24);
		Peer peer15 = new Peer(25);
		Peer peer16 = new Peer(26);
		Peer peer17 = new Peer(27);
		Peer peer18 = new Peer(28);
		Peer peer19 = new Peer(29);
		Peer peer20 = new Peer(30);
		Peer peer21 = new Peer(31);
		Peer peer22 = new Peer(32);
		Peer peer23 = new Peer(33);
		Peer peer24 = new Peer(34);
		Peer peer25 = new Peer(35);
		Peer peer26 = new Peer(36);
		Peer peer27 = new Peer(37);
		Peer peer28 = new Peer(38);
		Peer peer29 = new Peer(39);
		Peer peer30 = new Peer(40);
		Peer peer31 = new Peer(41);
		Peer peer32 = new Peer(42);
		Peer peer33 = new Peer(43);
		Peer peer34 = new Peer(44);
		Peer peer35 = new Peer(45);
		Peer peer36 = new Peer(46);
		Peer peer37 = new Peer(47);
		Peer peer38 = new Peer(48);
		Peer peer39 = new Peer(49);
		Peer peer40 = new Peer(50);
		Peer peer41 = new Peer(51);
		Peer peer42 = new Peer(52);
		Peer peer43 = new Peer(53);
		Peer peer44 = new Peer(54);
		Peer peer45 = new Peer(55);
		Peer peer46 = new Peer(56);
		Peer peer47 = new Peer(57);
		Peer peer48 = new Peer(58);
		Peer peer49 = new Peer(59);
		Peer peer50 = new Peer(60);
		Peer peer51 = new Peer(61);
		Peer peer52 = new Peer(62);
		Peer peer53 = new Peer(63);
		Peer peer54 = new Peer(64);
		Peer peer55 = new Peer(65);
		Peer peer56 = new Peer(66);		
		Peer peer57 = new Peer(67);
		Peer peer58 = new Peer(68);
		Peer peer59 = new Peer(69);
		Peer peer60 = new Peer(70);
		Peer peer61 = new Peer(71);
		Peer peer62 = new Peer(72);
		Peer peer63 = new Peer(73);
		Peer peer64 = new Peer(74);
		Peer peer65 = new Peer(75);
		Peer peer66 = new Peer(76);
		Peer peer67 = new Peer(77);
		Peer peer68 = new Peer(78);

		final BIPActor executor1 = engine.register(tracker1, "1", true);
		final BIPActor executor2 = engine.register(tracker2, "2", true);
		final BIPActor executor3 = engine.register(tracker3, "3", true);
		final BIPActor executor4 = engine.register(tracker4, "4", true);
		final BIPActor executor5 = engine.register(tracker5, "5", true);
		final BIPActor executor6 = engine.register(tracker6, "6", true);
		final BIPActor executor7 = engine.register(tracker7, "7", true);
		final BIPActor executor8 = engine.register(tracker8, "8", true);
		final BIPActor executor9 = engine.register(tracker9, "9", true);
		final BIPActor executor10 = engine.register(tracker10, "10", true);
		final BIPActor executor110 = engine.register(tracker110, "110", true);
		final BIPActor executor120 = engine.register(tracker120, "120", true);
		final BIPActor executor130 = engine.register(tracker130, "130", true);
		final BIPActor executor140 = engine.register(tracker140, "140", true);
		final BIPActor executor150 = engine.register(tracker150, "150", true);
		final BIPActor executor160 = engine.register(tracker160, "160", true);
		final BIPActor executor170 = engine.register(tracker170, "170", true);
		final BIPActor executor11 = engine.register(peer1, "11", true);
		final BIPActor executor12 = engine.register(peer2, "12", true);
		final BIPActor executor13 = engine.register(peer3, "13", true);
		final BIPActor executor14 = engine.register(peer4, "14", true);
		final BIPActor executor15 = engine.register(peer5, "15", true);
		final BIPActor executor16 = engine.register(peer6, "16", true);
		final BIPActor executor17 = engine.register(peer7, "17", true);
		final BIPActor executor18 = engine.register(peer8, "18", true);
		final BIPActor executor19 = engine.register(peer9, "19", true);
		final BIPActor executor20 = engine.register(peer10, "20", true);
		final BIPActor executor21 = engine.register(peer11, "21", true);
		final BIPActor executor22 = engine.register(peer12, "22", true);
		final BIPActor executor23 = engine.register(peer13, "23", true);
		final BIPActor executor24 = engine.register(peer14, "24", true);
		final BIPActor executor25 = engine.register(peer15, "25", true);
		final BIPActor executor26 = engine.register(peer16, "26", true);
		final BIPActor executor27 = engine.register(peer17, "27", true);
		final BIPActor executor28 = engine.register(peer18, "28", true);
		final BIPActor executor29 = engine.register(peer19, "29", true);
		final BIPActor executor30 = engine.register(peer20, "30", true);
		final BIPActor executor31 = engine.register(peer21, "31", true);
		final BIPActor executor32 = engine.register(peer22, "32", true);
		final BIPActor executor33 = engine.register(peer23, "33", true);
		final BIPActor executor34 = engine.register(peer24, "34", true);
		final BIPActor executor35 = engine.register(peer25, "35", true);
		final BIPActor executor36 = engine.register(peer26, "36", true);
		final BIPActor executor37 = engine.register(peer27, "37", true);
		final BIPActor executor38 = engine.register(peer28, "38", true);
		final BIPActor executor39 = engine.register(peer29, "39", true);
		final BIPActor executor40 = engine.register(peer30, "40", true);
		final BIPActor executor41 = engine.register(peer31, "41", true);
		final BIPActor executor42 = engine.register(peer32, "42", true);
		final BIPActor executor43 = engine.register(peer33, "43", true);
		final BIPActor executor44 = engine.register(peer34, "44", true);
		final BIPActor executor45 = engine.register(peer35, "45", true);
		final BIPActor executor46 = engine.register(peer36, "46", true);
		final BIPActor executor47 = engine.register(peer37, "47", true);
		final BIPActor executor48 = engine.register(peer38, "48", true);
		final BIPActor executor49 = engine.register(peer39, "49", true);
		final BIPActor executor50 = engine.register(peer40, "50", true);
		final BIPActor executor51 = engine.register(peer41, "51", true);
		final BIPActor executor52 = engine.register(peer42, "52", true);
		final BIPActor executor53 = engine.register(peer43, "53", true);
		final BIPActor executor54 = engine.register(peer44, "54", true);
		final BIPActor executor55 = engine.register(peer45, "55", true);
		final BIPActor executor56 = engine.register(peer46, "56", true);
		final BIPActor executor57 = engine.register(peer47, "57", true);
		final BIPActor executor58 = engine.register(peer48, "58", true);
		final BIPActor executor59 = engine.register(peer49, "59", true);
		final BIPActor executor60 = engine.register(peer50, "60", true);
		final BIPActor executor61 = engine.register(peer51, "61", true);
		final BIPActor executor62 = engine.register(peer52, "62", true);
		final BIPActor executor63 = engine.register(peer53, "63", true);
		final BIPActor executor64 = engine.register(peer54, "64", true);
		final BIPActor executor65 = engine.register(peer55, "65", true);
		final BIPActor executor66 = engine.register(peer56, "66", true);
		final BIPActor executor67 = engine.register(peer57, "67", true);
		final BIPActor executor68 = engine.register(peer58, "68", true);
		final BIPActor executor69 = engine.register(peer59, "69", true);
		final BIPActor executor70 = engine.register(peer60, "70", true);
		final BIPActor executor71 = engine.register(peer61, "71", true);
		final BIPActor executor72 = engine.register(peer62, "72", true);
		final BIPActor executor73 = engine.register(peer63, "73", true);
		final BIPActor executor74 = engine.register(peer64, "74", true);
		final BIPActor executor75 = engine.register(peer65, "75", true);
		final BIPActor executor76 = engine.register(peer66, "76", true);
		final BIPActor executor77 = engine.register(peer67, "77", true);
		final BIPActor executor78 = engine.register(peer68, "78", true);
		
		engine.specifyGlue(bipGlue);
		engine.start();
		engine.execute();

		try {
			Thread.sleep(700000);
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
	}
	
	@Test
	public void TrackerPeer90Test() {

		BIPGlue bipGlue = createGlue("src/test/resources/trackerPeerGlue.xml");
		BIPEngine engine = engineFactory.create("myEngine", bipGlue);

		Tracker tracker1 = new Tracker(1);
		Tracker tracker2 = new Tracker(2);
		Tracker tracker3 = new Tracker(3);
		Tracker tracker4 = new Tracker(4);
		Tracker tracker5 = new Tracker(5);
		Tracker tracker6 = new Tracker(6);
		Tracker tracker7 = new Tracker(7);
		Tracker tracker8 = new Tracker(8);
		Tracker tracker9 = new Tracker(9);
		Tracker tracker10 = new Tracker(10);
		Tracker tracker110 = new Tracker(110);
		Tracker tracker120 = new Tracker(120);
		Tracker tracker130 = new Tracker(130);
		Tracker tracker140 = new Tracker(140);
		Tracker tracker150 = new Tracker(150);
		Tracker tracker160 = new Tracker(160);
		Tracker tracker170 = new Tracker(170);
		Tracker tracker180 = new Tracker(180);
		Peer peer1 = new Peer(11);
		Peer peer2 = new Peer(12);
		Peer peer3 = new Peer(13);
		Peer peer4 = new Peer(14);
		Peer peer5 = new Peer(15);
		Peer peer6 = new Peer(16);
		Peer peer7 = new Peer(17);
		Peer peer8 = new Peer(18);
		Peer peer9 = new Peer(19);
		Peer peer10 = new Peer(20);
		Peer peer11 = new Peer(21);
		Peer peer12 = new Peer(22);
		Peer peer13 = new Peer(23);
		Peer peer14 = new Peer(24);
		Peer peer15 = new Peer(25);
		Peer peer16 = new Peer(26);
		Peer peer17 = new Peer(27);
		Peer peer18 = new Peer(28);
		Peer peer19 = new Peer(29);
		Peer peer20 = new Peer(30);
		Peer peer21 = new Peer(31);
		Peer peer22 = new Peer(32);
		Peer peer23 = new Peer(33);
		Peer peer24 = new Peer(34);
		Peer peer25 = new Peer(35);
		Peer peer26 = new Peer(36);
		Peer peer27 = new Peer(37);
		Peer peer28 = new Peer(38);
		Peer peer29 = new Peer(39);
		Peer peer30 = new Peer(40);
		Peer peer31 = new Peer(41);
		Peer peer32 = new Peer(42);
		Peer peer33 = new Peer(43);
		Peer peer34 = new Peer(44);
		Peer peer35 = new Peer(45);
		Peer peer36 = new Peer(46);
		Peer peer37 = new Peer(47);
		Peer peer38 = new Peer(48);
		Peer peer39 = new Peer(49);
		Peer peer40 = new Peer(50);
		Peer peer41 = new Peer(51);
		Peer peer42 = new Peer(52);
		Peer peer43 = new Peer(53);
		Peer peer44 = new Peer(54);
		Peer peer45 = new Peer(55);
		Peer peer46 = new Peer(56);
		Peer peer47 = new Peer(57);
		Peer peer48 = new Peer(58);
		Peer peer49 = new Peer(59);
		Peer peer50 = new Peer(60);
		Peer peer51 = new Peer(61);
		Peer peer52 = new Peer(62);
		Peer peer53 = new Peer(63);
		Peer peer54 = new Peer(64);
		Peer peer55 = new Peer(65);
		Peer peer56 = new Peer(66);		
		Peer peer57 = new Peer(67);
		Peer peer58 = new Peer(68);
		Peer peer59 = new Peer(69);
		Peer peer60 = new Peer(70);
		Peer peer61 = new Peer(71);
		Peer peer62 = new Peer(72);
		Peer peer63 = new Peer(73);
		Peer peer64 = new Peer(74);
		Peer peer65 = new Peer(75);
		Peer peer66 = new Peer(76);
		Peer peer67 = new Peer(77);
		Peer peer68 = new Peer(78);
		Peer peer69 = new Peer(79);
		Peer peer70 = new Peer(80);
		Peer peer71 = new Peer(81);
		Peer peer72 = new Peer(82);

		final BIPActor executor1 = engine.register(tracker1, "1", true);
		final BIPActor executor2 = engine.register(tracker2, "2", true);
		final BIPActor executor3 = engine.register(tracker3, "3", true);
		final BIPActor executor4 = engine.register(tracker4, "4", true);
		final BIPActor executor5 = engine.register(tracker5, "5", true);
		final BIPActor executor6 = engine.register(tracker6, "6", true);
		final BIPActor executor7 = engine.register(tracker7, "7", true);
		final BIPActor executor8 = engine.register(tracker8, "8", true);
		final BIPActor executor9 = engine.register(tracker9, "9", true);
		final BIPActor executor10 = engine.register(tracker10, "10", true);
		final BIPActor executor110 = engine.register(tracker110, "110", true);
		final BIPActor executor120 = engine.register(tracker120, "120", true);
		final BIPActor executor130 = engine.register(tracker130, "130", true);
		final BIPActor executor140 = engine.register(tracker140, "140", true);
		final BIPActor executor150 = engine.register(tracker150, "150", true);
		final BIPActor executor160 = engine.register(tracker160, "160", true);
		final BIPActor executor170 = engine.register(tracker170, "170", true);
		final BIPActor executor180 = engine.register(tracker180, "180", true);
		final BIPActor executor11 = engine.register(peer1, "11", true);
		final BIPActor executor12 = engine.register(peer2, "12", true);
		final BIPActor executor13 = engine.register(peer3, "13", true);
		final BIPActor executor14 = engine.register(peer4, "14", true);
		final BIPActor executor15 = engine.register(peer5, "15", true);
		final BIPActor executor16 = engine.register(peer6, "16", true);
		final BIPActor executor17 = engine.register(peer7, "17", true);
		final BIPActor executor18 = engine.register(peer8, "18", true);
		final BIPActor executor19 = engine.register(peer9, "19", true);
		final BIPActor executor20 = engine.register(peer10, "20", true);
		final BIPActor executor21 = engine.register(peer11, "21", true);
		final BIPActor executor22 = engine.register(peer12, "22", true);
		final BIPActor executor23 = engine.register(peer13, "23", true);
		final BIPActor executor24 = engine.register(peer14, "24", true);
		final BIPActor executor25 = engine.register(peer15, "25", true);
		final BIPActor executor26 = engine.register(peer16, "26", true);
		final BIPActor executor27 = engine.register(peer17, "27", true);
		final BIPActor executor28 = engine.register(peer18, "28", true);
		final BIPActor executor29 = engine.register(peer19, "29", true);
		final BIPActor executor30 = engine.register(peer20, "30", true);
		final BIPActor executor31 = engine.register(peer21, "31", true);
		final BIPActor executor32 = engine.register(peer22, "32", true);
		final BIPActor executor33 = engine.register(peer23, "33", true);
		final BIPActor executor34 = engine.register(peer24, "34", true);
		final BIPActor executor35 = engine.register(peer25, "35", true);
		final BIPActor executor36 = engine.register(peer26, "36", true);
		final BIPActor executor37 = engine.register(peer27, "37", true);
		final BIPActor executor38 = engine.register(peer28, "38", true);
		final BIPActor executor39 = engine.register(peer29, "39", true);
		final BIPActor executor40 = engine.register(peer30, "40", true);
		final BIPActor executor41 = engine.register(peer31, "41", true);
		final BIPActor executor42 = engine.register(peer32, "42", true);
		final BIPActor executor43 = engine.register(peer33, "43", true);
		final BIPActor executor44 = engine.register(peer34, "44", true);
		final BIPActor executor45 = engine.register(peer35, "45", true);
		final BIPActor executor46 = engine.register(peer36, "46", true);
		final BIPActor executor47 = engine.register(peer37, "47", true);
		final BIPActor executor48 = engine.register(peer38, "48", true);
		final BIPActor executor49 = engine.register(peer39, "49", true);
		final BIPActor executor50 = engine.register(peer40, "50", true);
		final BIPActor executor51 = engine.register(peer41, "51", true);
		final BIPActor executor52 = engine.register(peer42, "52", true);
		final BIPActor executor53 = engine.register(peer43, "53", true);
		final BIPActor executor54 = engine.register(peer44, "54", true);
		final BIPActor executor55 = engine.register(peer45, "55", true);
		final BIPActor executor56 = engine.register(peer46, "56", true);
		final BIPActor executor57 = engine.register(peer47, "57", true);
		final BIPActor executor58 = engine.register(peer48, "58", true);
		final BIPActor executor59 = engine.register(peer49, "59", true);
		final BIPActor executor60 = engine.register(peer50, "60", true);
		final BIPActor executor61 = engine.register(peer51, "61", true);
		final BIPActor executor62 = engine.register(peer52, "62", true);
		final BIPActor executor63 = engine.register(peer53, "63", true);
		final BIPActor executor64 = engine.register(peer54, "64", true);
		final BIPActor executor65 = engine.register(peer55, "65", true);
		final BIPActor executor66 = engine.register(peer56, "66", true);
		final BIPActor executor67 = engine.register(peer57, "67", true);
		final BIPActor executor68 = engine.register(peer58, "68", true);
		final BIPActor executor69 = engine.register(peer59, "69", true);
		final BIPActor executor70 = engine.register(peer60, "70", true);
		final BIPActor executor71 = engine.register(peer61, "71", true);
		final BIPActor executor72 = engine.register(peer62, "72", true);
		final BIPActor executor73 = engine.register(peer63, "73", true);
		final BIPActor executor74 = engine.register(peer64, "74", true);
		final BIPActor executor75 = engine.register(peer65, "75", true);
		final BIPActor executor76 = engine.register(peer66, "76", true);
		final BIPActor executor77 = engine.register(peer67, "77", true);
		final BIPActor executor78 = engine.register(peer68, "78", true);
		final BIPActor executor79 = engine.register(peer69, "79", true);
		final BIPActor executor80 = engine.register(peer70, "80", true);
		final BIPActor executor81 = engine.register(peer71, "81", true);
		final BIPActor executor82 = engine.register(peer72, "82", true);
		
		engine.specifyGlue(bipGlue);
		engine.start();
		engine.execute();

		try {
			Thread.sleep(700000);
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
	}
	
	@Test
	public void TrackerPeer95Test() {

		BIPGlue bipGlue = createGlue("src/test/resources/trackerPeerGlue.xml");
		BIPEngine engine = engineFactory.create("myEngine", bipGlue);

		Tracker tracker1 = new Tracker(1);
		Tracker tracker2 = new Tracker(2);
		Tracker tracker3 = new Tracker(3);
		Tracker tracker4 = new Tracker(4);
		Tracker tracker5 = new Tracker(5);
		Tracker tracker6 = new Tracker(6);
		Tracker tracker7 = new Tracker(7);
		Tracker tracker8 = new Tracker(8);
		Tracker tracker9 = new Tracker(9);
		Tracker tracker10 = new Tracker(10);
		Tracker tracker110 = new Tracker(110);
		Tracker tracker120 = new Tracker(120);
		Tracker tracker130 = new Tracker(130);
		Tracker tracker140 = new Tracker(140);
		Tracker tracker150 = new Tracker(150);
		Tracker tracker160 = new Tracker(160);
		Tracker tracker170 = new Tracker(170);
		Tracker tracker180 = new Tracker(180);
		Tracker tracker190 = new Tracker(190);
		Peer peer1 = new Peer(11);
		Peer peer2 = new Peer(12);
		Peer peer3 = new Peer(13);
		Peer peer4 = new Peer(14);
		Peer peer5 = new Peer(15);
		Peer peer6 = new Peer(16);
		Peer peer7 = new Peer(17);
		Peer peer8 = new Peer(18);
		Peer peer9 = new Peer(19);
		Peer peer10 = new Peer(20);
		Peer peer11 = new Peer(21);
		Peer peer12 = new Peer(22);
		Peer peer13 = new Peer(23);
		Peer peer14 = new Peer(24);
		Peer peer15 = new Peer(25);
		Peer peer16 = new Peer(26);
		Peer peer17 = new Peer(27);
		Peer peer18 = new Peer(28);
		Peer peer19 = new Peer(29);
		Peer peer20 = new Peer(30);
		Peer peer21 = new Peer(31);
		Peer peer22 = new Peer(32);
		Peer peer23 = new Peer(33);
		Peer peer24 = new Peer(34);
		Peer peer25 = new Peer(35);
		Peer peer26 = new Peer(36);
		Peer peer27 = new Peer(37);
		Peer peer28 = new Peer(38);
		Peer peer29 = new Peer(39);
		Peer peer30 = new Peer(40);
		Peer peer31 = new Peer(41);
		Peer peer32 = new Peer(42);
		Peer peer33 = new Peer(43);
		Peer peer34 = new Peer(44);
		Peer peer35 = new Peer(45);
		Peer peer36 = new Peer(46);
		Peer peer37 = new Peer(47);
		Peer peer38 = new Peer(48);
		Peer peer39 = new Peer(49);
		Peer peer40 = new Peer(50);
		Peer peer41 = new Peer(51);
		Peer peer42 = new Peer(52);
		Peer peer43 = new Peer(53);
		Peer peer44 = new Peer(54);
		Peer peer45 = new Peer(55);
		Peer peer46 = new Peer(56);
		Peer peer47 = new Peer(57);
		Peer peer48 = new Peer(58);
		Peer peer49 = new Peer(59);
		Peer peer50 = new Peer(60);
		Peer peer51 = new Peer(61);
		Peer peer52 = new Peer(62);
		Peer peer53 = new Peer(63);
		Peer peer54 = new Peer(64);
		Peer peer55 = new Peer(65);
		Peer peer56 = new Peer(66);		
		Peer peer57 = new Peer(67);
		Peer peer58 = new Peer(68);
		Peer peer59 = new Peer(69);
		Peer peer60 = new Peer(70);
		Peer peer61 = new Peer(71);
		Peer peer62 = new Peer(72);
		Peer peer63 = new Peer(73);
		Peer peer64 = new Peer(74);
		Peer peer65 = new Peer(75);
		Peer peer66 = new Peer(76);
		Peer peer67 = new Peer(77);
		Peer peer68 = new Peer(78);
		Peer peer69 = new Peer(79);
		Peer peer70 = new Peer(80);
		Peer peer71 = new Peer(81);
		Peer peer72 = new Peer(82);
		Peer peer73 = new Peer(83);
		Peer peer74 = new Peer(84);
		Peer peer75 = new Peer(85);
		Peer peer76 = new Peer(86);

		final BIPActor executor1 = engine.register(tracker1, "1", true);
		final BIPActor executor2 = engine.register(tracker2, "2", true);
		final BIPActor executor3 = engine.register(tracker3, "3", true);
		final BIPActor executor4 = engine.register(tracker4, "4", true);
		final BIPActor executor5 = engine.register(tracker5, "5", true);
		final BIPActor executor6 = engine.register(tracker6, "6", true);
		final BIPActor executor7 = engine.register(tracker7, "7", true);
		final BIPActor executor8 = engine.register(tracker8, "8", true);
		final BIPActor executor9 = engine.register(tracker9, "9", true);
		final BIPActor executor10 = engine.register(tracker10, "10", true);
		final BIPActor executor110 = engine.register(tracker110, "110", true);
		final BIPActor executor120 = engine.register(tracker120, "120", true);
		final BIPActor executor130 = engine.register(tracker130, "130", true);
		final BIPActor executor140 = engine.register(tracker140, "140", true);
		final BIPActor executor150 = engine.register(tracker150, "150", true);
		final BIPActor executor160 = engine.register(tracker160, "160", true);
		final BIPActor executor170 = engine.register(tracker170, "170", true);
		final BIPActor executor180 = engine.register(tracker180, "180", true);
		final BIPActor executor190 = engine.register(tracker190, "190", true);
		final BIPActor executor11 = engine.register(peer1, "11", true);
		final BIPActor executor12 = engine.register(peer2, "12", true);
		final BIPActor executor13 = engine.register(peer3, "13", true);
		final BIPActor executor14 = engine.register(peer4, "14", true);
		final BIPActor executor15 = engine.register(peer5, "15", true);
		final BIPActor executor16 = engine.register(peer6, "16", true);
		final BIPActor executor17 = engine.register(peer7, "17", true);
		final BIPActor executor18 = engine.register(peer8, "18", true);
		final BIPActor executor19 = engine.register(peer9, "19", true);
		final BIPActor executor20 = engine.register(peer10, "20", true);
		final BIPActor executor21 = engine.register(peer11, "21", true);
		final BIPActor executor22 = engine.register(peer12, "22", true);
		final BIPActor executor23 = engine.register(peer13, "23", true);
		final BIPActor executor24 = engine.register(peer14, "24", true);
		final BIPActor executor25 = engine.register(peer15, "25", true);
		final BIPActor executor26 = engine.register(peer16, "26", true);
		final BIPActor executor27 = engine.register(peer17, "27", true);
		final BIPActor executor28 = engine.register(peer18, "28", true);
		final BIPActor executor29 = engine.register(peer19, "29", true);
		final BIPActor executor30 = engine.register(peer20, "30", true);
		final BIPActor executor31 = engine.register(peer21, "31", true);
		final BIPActor executor32 = engine.register(peer22, "32", true);
		final BIPActor executor33 = engine.register(peer23, "33", true);
		final BIPActor executor34 = engine.register(peer24, "34", true);
		final BIPActor executor35 = engine.register(peer25, "35", true);
		final BIPActor executor36 = engine.register(peer26, "36", true);
		final BIPActor executor37 = engine.register(peer27, "37", true);
		final BIPActor executor38 = engine.register(peer28, "38", true);
		final BIPActor executor39 = engine.register(peer29, "39", true);
		final BIPActor executor40 = engine.register(peer30, "40", true);
		final BIPActor executor41 = engine.register(peer31, "41", true);
		final BIPActor executor42 = engine.register(peer32, "42", true);
		final BIPActor executor43 = engine.register(peer33, "43", true);
		final BIPActor executor44 = engine.register(peer34, "44", true);
		final BIPActor executor45 = engine.register(peer35, "45", true);
		final BIPActor executor46 = engine.register(peer36, "46", true);
		final BIPActor executor47 = engine.register(peer37, "47", true);
		final BIPActor executor48 = engine.register(peer38, "48", true);
		final BIPActor executor49 = engine.register(peer39, "49", true);
		final BIPActor executor50 = engine.register(peer40, "50", true);
		final BIPActor executor51 = engine.register(peer41, "51", true);
		final BIPActor executor52 = engine.register(peer42, "52", true);
		final BIPActor executor53 = engine.register(peer43, "53", true);
		final BIPActor executor54 = engine.register(peer44, "54", true);
		final BIPActor executor55 = engine.register(peer45, "55", true);
		final BIPActor executor56 = engine.register(peer46, "56", true);
		final BIPActor executor57 = engine.register(peer47, "57", true);
		final BIPActor executor58 = engine.register(peer48, "58", true);
		final BIPActor executor59 = engine.register(peer49, "59", true);
		final BIPActor executor60 = engine.register(peer50, "60", true);
		final BIPActor executor61 = engine.register(peer51, "61", true);
		final BIPActor executor62 = engine.register(peer52, "62", true);
		final BIPActor executor63 = engine.register(peer53, "63", true);
		final BIPActor executor64 = engine.register(peer54, "64", true);
		final BIPActor executor65 = engine.register(peer55, "65", true);
		final BIPActor executor66 = engine.register(peer56, "66", true);
		final BIPActor executor67 = engine.register(peer57, "67", true);
		final BIPActor executor68 = engine.register(peer58, "68", true);
		final BIPActor executor69 = engine.register(peer59, "69", true);
		final BIPActor executor70 = engine.register(peer60, "70", true);
		final BIPActor executor71 = engine.register(peer61, "71", true);
		final BIPActor executor72 = engine.register(peer62, "72", true);
		final BIPActor executor73 = engine.register(peer63, "73", true);
		final BIPActor executor74 = engine.register(peer64, "74", true);
		final BIPActor executor75 = engine.register(peer65, "75", true);
		final BIPActor executor76 = engine.register(peer66, "76", true);
		final BIPActor executor77 = engine.register(peer67, "77", true);
		final BIPActor executor78 = engine.register(peer68, "78", true);
		final BIPActor executor79 = engine.register(peer69, "79", true);
		final BIPActor executor80 = engine.register(peer70, "80", true);
		final BIPActor executor81 = engine.register(peer71, "81", true);
		final BIPActor executor82 = engine.register(peer72, "82", true);
		final BIPActor executor83 = engine.register(peer73, "83", true);
		final BIPActor executor84 = engine.register(peer74, "84", true);
		final BIPActor executor85 = engine.register(peer75, "85", true);
		final BIPActor executor86 = engine.register(peer76, "86", true);
		
		engine.specifyGlue(bipGlue);
		engine.start();
		engine.execute();

		try {
			Thread.sleep(700000);
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
	}
	
	@Test
	public void TrackerPeer100Test() {

		BIPGlue bipGlue = createGlue("src/test/resources/trackerPeerGlue.xml");
		BIPEngine engine = engineFactory.create("myEngine", bipGlue);

		Tracker tracker1 = new Tracker(1);
		Tracker tracker2 = new Tracker(2);
		Tracker tracker3 = new Tracker(3);
		Tracker tracker4 = new Tracker(4);
		Tracker tracker5 = new Tracker(5);
		Tracker tracker6 = new Tracker(6);
		Tracker tracker7 = new Tracker(7);
		Tracker tracker8 = new Tracker(8);
		Tracker tracker9 = new Tracker(9);
		Tracker tracker10 = new Tracker(10);
		Tracker tracker110 = new Tracker(110);
		Tracker tracker120 = new Tracker(120);
		Tracker tracker130 = new Tracker(130);
		Tracker tracker140 = new Tracker(140);
		Tracker tracker150 = new Tracker(150);
		Tracker tracker160 = new Tracker(160);
		Tracker tracker170 = new Tracker(170);
		Tracker tracker180 = new Tracker(180);
		Tracker tracker190 = new Tracker(190);
		Tracker tracker200 = new Tracker(200);
		Peer peer1 = new Peer(11);
		Peer peer2 = new Peer(12);
		Peer peer3 = new Peer(13);
		Peer peer4 = new Peer(14);
		Peer peer5 = new Peer(15);
		Peer peer6 = new Peer(16);
		Peer peer7 = new Peer(17);
		Peer peer8 = new Peer(18);
		Peer peer9 = new Peer(19);
		Peer peer10 = new Peer(20);
		Peer peer11 = new Peer(21);
		Peer peer12 = new Peer(22);
		Peer peer13 = new Peer(23);
		Peer peer14 = new Peer(24);
		Peer peer15 = new Peer(25);
		Peer peer16 = new Peer(26);
		Peer peer17 = new Peer(27);
		Peer peer18 = new Peer(28);
		Peer peer19 = new Peer(29);
		Peer peer20 = new Peer(30);
		Peer peer21 = new Peer(31);
		Peer peer22 = new Peer(32);
		Peer peer23 = new Peer(33);
		Peer peer24 = new Peer(34);
		Peer peer25 = new Peer(35);
		Peer peer26 = new Peer(36);
		Peer peer27 = new Peer(37);
		Peer peer28 = new Peer(38);
		Peer peer29 = new Peer(39);
		Peer peer30 = new Peer(40);
		Peer peer31 = new Peer(41);
		Peer peer32 = new Peer(42);
		Peer peer33 = new Peer(43);
		Peer peer34 = new Peer(44);
		Peer peer35 = new Peer(45);
		Peer peer36 = new Peer(46);
		Peer peer37 = new Peer(47);
		Peer peer38 = new Peer(48);
		Peer peer39 = new Peer(49);
		Peer peer40 = new Peer(50);
		Peer peer41 = new Peer(51);
		Peer peer42 = new Peer(52);
		Peer peer43 = new Peer(53);
		Peer peer44 = new Peer(54);
		Peer peer45 = new Peer(55);
		Peer peer46 = new Peer(56);
		Peer peer47 = new Peer(57);
		Peer peer48 = new Peer(58);
		Peer peer49 = new Peer(59);
		Peer peer50 = new Peer(60);
		Peer peer51 = new Peer(61);
		Peer peer52 = new Peer(62);
		Peer peer53 = new Peer(63);
		Peer peer54 = new Peer(64);
		Peer peer55 = new Peer(65);
		Peer peer56 = new Peer(66);		
		Peer peer57 = new Peer(67);
		Peer peer58 = new Peer(68);
		Peer peer59 = new Peer(69);
		Peer peer60 = new Peer(70);
		Peer peer61 = new Peer(71);
		Peer peer62 = new Peer(72);
		Peer peer63 = new Peer(73);
		Peer peer64 = new Peer(74);
		Peer peer65 = new Peer(75);
		Peer peer66 = new Peer(76);
		Peer peer67 = new Peer(77);
		Peer peer68 = new Peer(78);
		Peer peer69 = new Peer(79);
		Peer peer70 = new Peer(80);
		Peer peer71 = new Peer(81);
		Peer peer72 = new Peer(82);
		Peer peer73 = new Peer(83);
		Peer peer74 = new Peer(84);
		Peer peer75 = new Peer(85);
		Peer peer76 = new Peer(86);
		Peer peer77 = new Peer(87);
		Peer peer78 = new Peer(88);
		Peer peer79 = new Peer(89);
		Peer peer80 = new Peer(90);

		final BIPActor executor1 = engine.register(tracker1, "1", true);
		final BIPActor executor2 = engine.register(tracker2, "2", true);
		final BIPActor executor3 = engine.register(tracker3, "3", true);
		final BIPActor executor4 = engine.register(tracker4, "4", true);
		final BIPActor executor5 = engine.register(tracker5, "5", true);
		final BIPActor executor6 = engine.register(tracker6, "6", true);
		final BIPActor executor7 = engine.register(tracker7, "7", true);
		final BIPActor executor8 = engine.register(tracker8, "8", true);
		final BIPActor executor9 = engine.register(tracker9, "9", true);
		final BIPActor executor10 = engine.register(tracker10, "10", true);
		final BIPActor executor110 = engine.register(tracker110, "110", true);
		final BIPActor executor120 = engine.register(tracker120, "120", true);
		final BIPActor executor130 = engine.register(tracker130, "130", true);
		final BIPActor executor140 = engine.register(tracker140, "140", true);
		final BIPActor executor150 = engine.register(tracker150, "150", true);
		final BIPActor executor160 = engine.register(tracker160, "160", true);
		final BIPActor executor170 = engine.register(tracker170, "170", true);
		final BIPActor executor180 = engine.register(tracker180, "180", true);
		final BIPActor executor190 = engine.register(tracker190, "190", true);
		final BIPActor executor200 = engine.register(tracker200, "200", true);
		final BIPActor executor11 = engine.register(peer1, "11", true);
		final BIPActor executor12 = engine.register(peer2, "12", true);
		final BIPActor executor13 = engine.register(peer3, "13", true);
		final BIPActor executor14 = engine.register(peer4, "14", true);
		final BIPActor executor15 = engine.register(peer5, "15", true);
		final BIPActor executor16 = engine.register(peer6, "16", true);
		final BIPActor executor17 = engine.register(peer7, "17", true);
		final BIPActor executor18 = engine.register(peer8, "18", true);
		final BIPActor executor19 = engine.register(peer9, "19", true);
		final BIPActor executor20 = engine.register(peer10, "20", true);
		final BIPActor executor21 = engine.register(peer11, "21", true);
		final BIPActor executor22 = engine.register(peer12, "22", true);
		final BIPActor executor23 = engine.register(peer13, "23", true);
		final BIPActor executor24 = engine.register(peer14, "24", true);
		final BIPActor executor25 = engine.register(peer15, "25", true);
		final BIPActor executor26 = engine.register(peer16, "26", true);
		final BIPActor executor27 = engine.register(peer17, "27", true);
		final BIPActor executor28 = engine.register(peer18, "28", true);
		final BIPActor executor29 = engine.register(peer19, "29", true);
		final BIPActor executor30 = engine.register(peer20, "30", true);
		final BIPActor executor31 = engine.register(peer21, "31", true);
		final BIPActor executor32 = engine.register(peer22, "32", true);
		final BIPActor executor33 = engine.register(peer23, "33", true);
		final BIPActor executor34 = engine.register(peer24, "34", true);
		final BIPActor executor35 = engine.register(peer25, "35", true);
		final BIPActor executor36 = engine.register(peer26, "36", true);
		final BIPActor executor37 = engine.register(peer27, "37", true);
		final BIPActor executor38 = engine.register(peer28, "38", true);
		final BIPActor executor39 = engine.register(peer29, "39", true);
		final BIPActor executor40 = engine.register(peer30, "40", true);
		final BIPActor executor41 = engine.register(peer31, "41", true);
		final BIPActor executor42 = engine.register(peer32, "42", true);
		final BIPActor executor43 = engine.register(peer33, "43", true);
		final BIPActor executor44 = engine.register(peer34, "44", true);
		final BIPActor executor45 = engine.register(peer35, "45", true);
		final BIPActor executor46 = engine.register(peer36, "46", true);
		final BIPActor executor47 = engine.register(peer37, "47", true);
		final BIPActor executor48 = engine.register(peer38, "48", true);
		final BIPActor executor49 = engine.register(peer39, "49", true);
		final BIPActor executor50 = engine.register(peer40, "50", true);
		final BIPActor executor51 = engine.register(peer41, "51", true);
		final BIPActor executor52 = engine.register(peer42, "52", true);
		final BIPActor executor53 = engine.register(peer43, "53", true);
		final BIPActor executor54 = engine.register(peer44, "54", true);
		final BIPActor executor55 = engine.register(peer45, "55", true);
		final BIPActor executor56 = engine.register(peer46, "56", true);
		final BIPActor executor57 = engine.register(peer47, "57", true);
		final BIPActor executor58 = engine.register(peer48, "58", true);
		final BIPActor executor59 = engine.register(peer49, "59", true);
		final BIPActor executor60 = engine.register(peer50, "60", true);
		final BIPActor executor61 = engine.register(peer51, "61", true);
		final BIPActor executor62 = engine.register(peer52, "62", true);
		final BIPActor executor63 = engine.register(peer53, "63", true);
		final BIPActor executor64 = engine.register(peer54, "64", true);
		final BIPActor executor65 = engine.register(peer55, "65", true);
		final BIPActor executor66 = engine.register(peer56, "66", true);
		final BIPActor executor67 = engine.register(peer57, "67", true);
		final BIPActor executor68 = engine.register(peer58, "68", true);
		final BIPActor executor69 = engine.register(peer59, "69", true);
		final BIPActor executor70 = engine.register(peer60, "70", true);
		final BIPActor executor71 = engine.register(peer61, "71", true);
		final BIPActor executor72 = engine.register(peer62, "72", true);
		final BIPActor executor73 = engine.register(peer63, "73", true);
		final BIPActor executor74 = engine.register(peer64, "74", true);
		final BIPActor executor75 = engine.register(peer65, "75", true);
		final BIPActor executor76 = engine.register(peer66, "76", true);
		final BIPActor executor77 = engine.register(peer67, "77", true);
		final BIPActor executor78 = engine.register(peer68, "78", true);
		final BIPActor executor79 = engine.register(peer69, "79", true);
		final BIPActor executor80 = engine.register(peer70, "80", true);
		final BIPActor executor81 = engine.register(peer71, "81", true);
		final BIPActor executor82 = engine.register(peer72, "82", true);
		final BIPActor executor83 = engine.register(peer73, "83", true);
		final BIPActor executor84 = engine.register(peer74, "84", true);
		final BIPActor executor85 = engine.register(peer75, "85", true);
		final BIPActor executor86 = engine.register(peer76, "86", true);
		final BIPActor executor87 = engine.register(peer77, "87", true);
		final BIPActor executor88 = engine.register(peer78, "88", true);
		final BIPActor executor89 = engine.register(peer79, "89", true);
		final BIPActor executor90 = engine.register(peer80, "90", true);
		
		engine.specifyGlue(bipGlue);
		engine.start();
		engine.execute();

		try {
			Thread.sleep(700000);
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
	}
	
	private BIPGlue createGlue(String bipGlueFilename) {
		BIPGlue bipGlue = null;

		InputStream inputStream;
		try {
			inputStream = new FileInputStream(bipGlueFilename);

			bipGlue = GlueBuilder.fromXML(inputStream);

		} catch (FileNotFoundException e) {

			e.printStackTrace();
		}
		return bipGlue;
	}

	@Test
	// Compute time in seconds for 1000 iterations
	public void computeTimeInSecsfor1000Iterations() throws IOException {
		int i;
		for (i = 5; i < 55; i = i + 5) {

			File file = new File("/home/mavridou/workspace/javaengineperformance/TrackersPeers/Time/100000Nodes/"
					+ "TP" + i
					+ ".txt");
			FileReader fileReader = new FileReader(file);
			BufferedReader bufferedReader = new BufferedReader(fileReader);
			String line;
			int count = 0;
			double sum = 0;
			bufferedReader.readLine();
			while ((line = bufferedReader.readLine()) != null) {
				if (count == 1000)
					break;
				if (!line.equals("")) {
					sum += Integer.parseInt(line);
					count++;
				}
			}
			if (count == 0)
				return;
			System.out.println(i + " " + sum / 1000);
		}
	}

	@Test
	// Compute time in seconds for 1000 iterations
	public void computeAverage() throws IOException {
		int i;
		for (i = 5; i < 55; i = i + 5) {

			File file = new File("/home/mavridou/workspace/javaengineperformance/TrackersPeers/Time/100000Nodes/"
					+ "TP"
					+ i
					+ ".txt");
			FileReader fileReader = new FileReader(file);
			BufferedReader bufferedReader = new BufferedReader(fileReader);
			String line;
			int count = 0;
			double sum = 0;
			bufferedReader.readLine();
			while ((line = bufferedReader.readLine()) != null) {
				if (!line.equals("")) {
					sum += Integer.parseInt(line);
					count++;
				}
			}
			if (count == 0)
				return;
			System.out.println(i + " " + sum / count + " for iterations: " + count);
		}
	}
}
